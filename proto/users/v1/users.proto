syntax = "proto3";

package users.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "buf/validate/validate.proto";
// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {version: "1.0"};
  external_docs: {
    url: "https://github.com/go-dyn/api-grpc-service";
    description: "Api gRpc service";
  }
  schemes: HTTPS;
};

service UserService {
  rpc AddUser(AddUserRequest) returns (AddUserResponse) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/users
      post: "/api/v1/users"
      body: "*"
      response_body: "user"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Add a user"
      description: "Add a user to the server."
      tags: "Users"
    };
  }
  rpc ListUsers(ListUsersRequest) returns (stream ListUsersResponse) {
    option (google.api.http) = {
      // Route to this method from GET requests to /api/v1/users
      get: "/api/v1/users"
      response_body: "user"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List users"
      description: "List all users on the server."
      tags: "Users"
    };
  }
}

message AddUserRequest {}

message AddUserResponse {
  User user = 1;
}

message ListUsersRequest {}

message ListUsersResponse {
  User user = 1;
}

message User {
  string id = 1;
  string email = 2 [(buf.validate.field).string.email = true];
  string password = 3 [(buf.validate.field).string.min_len = 1, (buf.validate.field).string.max_len = 50];
  string name = 4 [(buf.validate.field).string.min_len = 1, (buf.validate.field).string.max_len = 100];
}
